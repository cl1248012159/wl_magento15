<?php

class Idev_OneStepCheckout_Helper_Checkout extends Mage_Core_Helper_Abstract
{
	function __construct()
	{
		$this->settings = $this->loadConfig();
	}
	
	public function loadConfig()
	{	
		$settings = array();
		$items = array(
			'serial', 'default_country', 'default_shipping_method', 'default_payment_method',
			'generate_customer_password', 'enable_geoip', 'exclude_city', 'exclude_telephone',
			'exclude_company', 'exclude_fax', 'exclude_region', 'exclude_zip', 'enable_comments',
			'geoip_database', 'enable_newsletter', 'enable_terms', 'terms_url',
			'checkout_title', 'checkout_description', 'enable_login_link', 'login_link_html',
			'terms_title', 'terms_contents', 'enable_different_shipping', 'enable_ajax_save_billing',
			'ajax_save_billing_fields', 'enable_update_payment_on_shipping',
		);	
		
		foreach($items as $config)	{
			$settings[$config] = Mage::getStoreConfig('checkout/onestepcheckout/' . $config);
		}
		
		return $settings;
	}



	public function load_exclude_data(&$data)
	{
		if( $this->settings['exclude_city'] )	{
			$data['city'] = '-';
		}
		
		if( $this->settings['exclude_telephone'] )	{
			$data['telephone'] = '-';
		}
		
		if( $this->settings['exclude_region'] )	{
			$data['region'] = '-';
			$data['region_id'] = '-';
		}
		
		if( $this->settings['exclude_zip'] )	{
			$data['postcode'] = '-';
		}
		
		if( $this->settings['exclude_company'] )	{
			$data['company'] = '';
		}
		
		if( $this->settings['exclude_fax'] )	{
			$data['fax'] = '';
		}
		
		return $data;
	}

    public function getOnepage()
    {
        return Mage::getSingleton('checkout/type_onepage');
    }


	public function differentShippingAvailable()
	{
		if($this->isVirtual())	{
			return false;
		}
		
		if($this->settings['enable_different_shipping'])	{
			return true;
		}
		
		return false;
	}

    public function isVirtual()
    {
        return $this->getOnepage()->getQuote()->isVirtual();
    }

	public function _getAddressError($result, $billing_data, $type = 'billing')
	{
		$errors = array();
	
		if(is_array($result['message']) && in_array('Please enter city.', $result['message']))    {
			$errors[] = 'city';
		}
	
		if(is_array($result['message']) && in_array('Please enter first name.', $result['message']))    {
			$errors[] = 'firstname';
		}

		if(is_array($result['message']) && in_array('Please enter last name.', $result['message']))    {
			$errors[] = 'lastname';
		}

		if(is_array($result['message']) && in_array('Please enter street.', $result['message']))    {
			$errors[] = 'address';
		}

		if(is_array($result['message']) && in_array('Please enter zip/postal code.', $result['message']))    {
			$errors[] = 'postcode';
		}
 
		if(is_array($result['message']) && in_array('Please enter state/province.', $result['message']))    {
			$errors[] = 'region';
		}

		if(is_array($result['message']) && in_array('Please enter telephone.', $result['message']))    {
			$errors[] = 'telephone';
		}
		else    {
			if(!isset($billing_data['telephone']) || trim($billing_data['telephone']) == '') {
				if(!$this->settings['exclude_telephone'])	{
					$errors[] = 'telephone';
				}
			}
		}

		if( $type == 'billing' )	{

			if(!is_array($result['message']) && substr($result['message'], 0, 21) == 'Invalid email address')    {
				$errors[] = 'email';
			}
			else    {
				if(!isset($billing_data['email']) || trim($billing_data['email']) == '') {
					$errors[] = 'email';
				}
			}
		}
		
		
		
		
		return $errors;
	}






	
}
